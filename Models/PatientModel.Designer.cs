//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace TEAM3OIE2S.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class PatientEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new PatientEntities object using the connection string found in the 'PatientEntities' section of the application configuration file.
        /// </summary>
        public PatientEntities() : base("name=PatientEntities", "PatientEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PatientEntities object.
        /// </summary>
        public PatientEntities(string connectionString) : base(connectionString, "PatientEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PatientEntities object.
        /// </summary>
        public PatientEntities(EntityConnection connection) : base(connection, "PatientEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Patient> Patients
        {
            get
            {
                if ((_Patients == null))
                {
                    _Patients = base.CreateObjectSet<Patient>("Patients");
                }
                return _Patients;
            }
        }
        private ObjectSet<Patient> _Patients;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Patients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatients(Patient patient)
        {
            base.AddObject("Patients", patient);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TEAM3OIE2SDBModels", Name="Patient")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Patient : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Patient object.
        /// </summary>
        /// <param name="patientID">Initial value of the patientID property.</param>
        public static Patient CreatePatient(global::System.Int32 patientID)
        {
            Patient patient = new Patient();
            patient.patientID = patientID;
            return patient;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 patientID
        {
            get
            {
                return _patientID;
            }
            set
            {
                if (_patientID != value)
                {
                    OnpatientIDChanging(value);
                    ReportPropertyChanging("patientID");
                    _patientID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("patientID");
                    OnpatientIDChanged();
                }
            }
        }
        private global::System.Int32 _patientID;
        partial void OnpatientIDChanging(global::System.Int32 value);
        partial void OnpatientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        [DisplayName("Patient institutional ID")]
        [Required(ErrorMessage="Institutional ID required")]
        public Nullable<global::System.Int32> originalID
        {
            get
            {
                return _originalID;
            }
            set
            {
                OnoriginalIDChanging(value);
                ReportPropertyChanging("originalID");
                _originalID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("originalID");
                OnoriginalIDChanged();
            }
        }
        private Nullable<global::System.Int32> _originalID;
        partial void OnoriginalIDChanging(Nullable<global::System.Int32> value);
        partial void OnoriginalIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        [DisplayName("Sex")]
        [Required(ErrorMessage="Sex required")]
        [RegularExpression("^[MFX]", ErrorMessage="Must be one of M, F, or X")]
        public global::System.String sex
        {
            get
            {
                return _sex;
            }
            set
            {
                OnsexChanging(value);
                ReportPropertyChanging("sex");
                _sex = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("sex");
                OnsexChanged();
            }
        }
        private global::System.String _sex;
        partial void OnsexChanging(global::System.String value);
        partial void OnsexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        [DisplayName("Age")]
        [Required(ErrorMessage = "Age required")]
        [Range(0, 120, ErrorMessage="Must be between 0 and 120 years old")]
        public Nullable<global::System.Int32> age
        {
            get
            {
                return _age;
            }
            set
            {
                OnageChanging(value);
                ReportPropertyChanging("age");
                _age = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("age");
                OnageChanged();
            }
        }
        private Nullable<global::System.Int32> _age;
        partial void OnageChanging(Nullable<global::System.Int32> value);
        partial void OnageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> entryDate
        {
            get
            {
                return _entryDate;
            }
            set
            {
                OnentryDateChanging(value);
                ReportPropertyChanging("entryDate");
                _entryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("entryDate");
                OnentryDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _entryDate;
        partial void OnentryDateChanging(Nullable<global::System.DateTime> value);
        partial void OnentryDateChanged();

       /* private class SurgeryDateValidation : ValidationAttribute
        {
            public override bool IsValid(object value)
            {
                if (value == null)
                {
                    return false;
                }
                DateTime dt = (DateTime) value;
            
                if (dt.CompareTo(new DateTime(1901, 1, 1)) < 0 || dt.CompareTo(DateTime.Today) > 0)
                {
                    return false;
                }

                return true;
            }
        }*/
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        //[SurgeryDateValidation(ErrorMessage="Invalid date.")]
        public Nullable<global::System.DateTime> dateOfSurgery
        {
            get
            {
                return _dateOfSurgery;
            }
            set
            {
                OndateOfSurgeryChanging(value);
                ReportPropertyChanging("dateOfSurgery");
                _dateOfSurgery = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dateOfSurgery");
                OndateOfSurgeryChanged();
            }
        }
        private Nullable<global::System.DateTime> _dateOfSurgery;
        partial void OndateOfSurgeryChanging(Nullable<global::System.DateTime> value);
        partial void OndateOfSurgeryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> surgeonID
        {
            get
            {
                return _surgeonID;
            }
            set
            {
                OnsurgeonIDChanging(value);
                ReportPropertyChanging("surgeonID");
                _surgeonID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("surgeonID");
                OnsurgeonIDChanged();
            }
        }
        private Nullable<global::System.Int32> _surgeonID;
        partial void OnsurgeonIDChanging(Nullable<global::System.Int32> value);
        partial void OnsurgeonIDChanged();

        #endregion

    
    }

    #endregion

    
}
